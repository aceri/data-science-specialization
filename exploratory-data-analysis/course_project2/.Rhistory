head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,pakage,country)
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
select(cran)
cran
select(cran,-time)
select(cran,-(x:size))
select(cran,-(X:size))
select(cran,-X:size)
select(cran,-X:-size)
cran
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
Comparison(cran,r_version=<"3.0.2",country=="IN")
Comparison(cran,r_version<="3.0.2",country=="IN")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran,country=="IN" | country=="IN")
filter(cran,country=="US" | country=="IN")
filter(cran,size > 100500, r_os=="linux-gnu")
is(na(c(3,5,NA,10)))
is.na(c(3,5,NA,10)))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(R.version))
filter(cran,!is.na(r_version))
cran2<-select(cran,size)
cran2<-select(cran,size_ip_id)
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^10)
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
tbl_df(mydf)
cran<-tbl_df(mydf)
rm("mydf")
cran
group_by("package")
group_by(package)
group_by(cran,package)
?group_by
by_package<-group_by(cran,package)
by_package
summarize(mean(size),group_by(cran,package))
summarize(cran,mean(size),group_by(cran,package))
summarize(group_by(cran,package)
group_by(cran,package)
summarize(by_package)
summarize(by_package,mean(size))
submit()
tbl
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts <-filter(pack_sum,count>=678)
top_counts <-filter(pack_sum,count>678)
top_counts <- filter(pack_sum,count>679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(top_counts,count)
top_counts_sorted <- arrange(top_counts,desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique <- filter(pack_sum, unique >465)
View(top_unique)
arrange(top_unique,desc(unique))
top_unique_sorted <- arrange(top_unique,desc(unique))
view(top_unique_sorted)
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
gather(student2,sex,counts,-grade)
gather(students2,sex,counts,-grade)
res<-gather(students2,sex,counts,-grade)
res<-gather(students2,sex_class,counts,-grade)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(data=res,col=sex_class,into=c("sex","class"))
submit()
submit()
submit()
students2
submit()
students2
students3
?gather
submit()
submit()
submit()
students3
submit()
submit()
submit()
swirl()
2
swirl()
Sys.getlocale("LC_TIME")
library(libridate)
library(lubridate)
help(package=lubridate)
today()
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label=TRUE)
this_moment<-now()
this_moment
k<-FromCSV("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
k<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",header=TRUE)
quir
exit
quit()
swirl()
k<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",header=TRUE)
names(k)
filter(k,VAL>1000000)
k$VAL
filter(k,VAL))24
filter(k,VAL==24)
count(filter(k,VAL==24))
k$FES
x<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",header=TRUE)
x<-read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",)
read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx",header=TRUE)
library(xlsx)
package(xlsx)
library(xlxs)
library(xlsx)
install.package(xlsx)
install.packages(xlsx)
install.packages("xlsx")
library("xlsx")
read.xlsx("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx")
install.packages("rJava")
install.packages("xlsx")
library("xlsx")
setwd("C:/Users/David/datasciencecoursera/W4Quiz")
install.packages(swirl)
install.packages("swirl")
swirl()
library(swirl)
swirl()
swirl()
cmat
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min())
apply(distTmp,2,which.min(distTmp))
apply(distTmp,2,which.min)
points(x,y,col=c("red","orange","purple"),pch=19,cex=2,cols1[newClust])
points(x,y,pch=19,cex=2,cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans?
quit
?kmeans
kmeans(dataFrame,centers=3)
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataframe,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*%. t(matv)
matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[,1:2]
svd2$d[,1:2]
svd2$d
dim(faceData)
a1 <-
sdf
wr3
a1 <- (svd1$u[,1] %*% svd1$d[1])
a1 <- svd1$u[,1] %*% svd1$d[1]
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*%  diag(svd1$d[1:2])  %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*%  diag(svd1$d[1:5])  %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*%  diag(svd1$d[1:10])  %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
subset(ssd,subject==1)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist<-dist(sub1[,1:3])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col )
myplclust(hclustering,lab.col=unclass(sub1$activity) )
mdist<-dist(sub1[,10:12])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1<- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon<-which.max((svd1$v[,2]))
maxCon<-which.max(svd1$v[,2])
mdist<-dist(sub1$v[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown<-which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames<-strsplit(cnames,'|',fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dmi(pm1)
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log(x1))
boxplot(log10(x0),log10(x1))
negative <- x1 < 0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates<-pm1$Date
str(dates)
dates<-as.Date(as.character(dates),"%/%m%d")
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
intersect(site0,site1)
both<-intersect(site0,site1)
both
head(pm0)
cnt0<-subset(pm0,State.Code==36 and County.site in both)
dates <- pm1$Date
cnt0<-subset(pm0,State.Code==36 and County.site %in% both)
cnt0<-subset(pm0,State.Code==36 and county.site %in% both)
cnt0<-subset(pm0,State.Code==36 & county.site %in% both)
cnt1<-subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub<-subset(cnt0,County.Code==63 & Site.ID==2008)
pm0sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
pm1sub<-subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub<-pm0sub$Sample.Value
x1sub<-pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar = c(4, 4, 2, 1))
plot(dates0,x0sub,pch=20)
abline(pm25,lwd=2)
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng<-range(x0sub,x1sub,na.rp=TRUE)
rng<-range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
with(mrg, points(rep(2, 52), mrg[, 3]))
head(mrg)
with(mrg,plot(rep(1, 52), mrg[, 2], xlim = c(.5,2.5)))
with(mrg,points(rep(2,53),mrg[,3]))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
ls()
rm(list<-ls())
clear(list<-ls())
cls(list<-ls())
dir()
setwd("C:\Users\David\datasciencecoursera\exdata_FNEI_data")
setwd("C:/Users/David/datasciencecoursera/exdata_FNEI_data")
ls()
dir()
emissions.df <- readRDS("summarySCC_PM25.rds")
scc.df <- readRDS("Source_Classification_Code.rds")
baltimore_emissions <- emissions_data[emissions_data$fips=='24510',]
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
baltimore_emissions <- emissions_data[emissions_data$fips=='24510',]
baltimore_emissions
baltimore_emissions_aggregated_by_year <-aggregate(Emissions ~ year, baltimore_emissions, sum)
z<-baltimore_emissions_aggregated_by_year <-aggregate(Emissions ~ year, baltimore_emissions, sum)
<
z
png("plot2.png")
barplot(height=baltimore_emissions_aggregated_by_year$Emissions, names.arg=baltimore_emissions_aggregated_by_year$year,xlab="years",ylab=expression("Total PM"[2.5]*" emission"),main=expression("Total PM"[2.5]*' in the Baltimore City , MD emissions in various years'))
dev.off()
barplot(height=baltimore_emissions_aggregated_by_year$Emissions, names.arg=baltimore_emissions_aggregated_by_year$year,xlab="years",ylab=expression("Total PM"[2.5]*" emission"),main=expression("Total PM"[2.5]*' in the Baltimore City , MD emissions in various years'))
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Now we aggregate by year
total_emissions_by_year <-aggregate(Emissions ~ year, emissions_data, sum)
plot(total_emissions_by_year$year,total_emissions_by_year$Emissions,type="b",
xlab="Year",
ylab="PM2.5 Emissions (tons)",
main="Total PM2.5 Emissions in U.S")
plot(total_emissions_by_year$year,total_emissions_by_year$Emissions,type="b",
xlab="Year",
ylab="PM2.5 Emissions (tons)",
main="Total PM2.5 Emissions in U.S")
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Now we aggregate by year
total_emissions_by_year <-aggregate(Emissions ~ year, emissions_data, sum)
# Now we plot that to a png file
png("plot1.png")
plot(total_emissions_by_year$year,total_emissions_by_year$Emissions,type="b",
xlab="Year",
ylab="PM2.5 Emissions (tons)",
main="Total PM2.5 Emissions in U.S")
dev.off()
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# ggplot2 required this time
library(ggplot2)
# Baltimore emissions code is 24510 (fips) this time aswell
baltimore_emissions <- emissions_data[emissions_data$fips=='24510',]
# Now we aggregate by year AND type
baltimore_emissions_aggregated_by_year_and_type <-aggregate(Emissions ~ year + type, baltimore_emissions, sum)
# Now we plot that to a png file
png("plot3.png")
g <- ggplot(baltimore_emissions_aggregated_by_year_and_type, aes(year, Emissions, color = type))
g <- g  + geom_line() + xlab("year") + ylab(expression("Total PM"[2.5]*" Emissions")) +
ggtitle("Total Emissions in Baltimore City from 1999 to 2008")
print(g)
dev.off()
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Using grep now to get the coal data
scc_coal_data <- scc_data[grep('coal', scc_data$Short.Name)]
# now we need the coal_emissions from the scc coal data we got before
coal_emissions <- emissions_data[emissions_data$SCC %in% scc_coal_data$SCC,]
# Now like previous times we aggregate (only by year now) but with the new subset we just created
coal_emissions_aggregated_by_year <-aggregate(Emissions ~ year, coal_emissions, sum)
# Now we plot that to a png file, I will use BASE again
png("plot4.png")
plot(coal_emissions_aggregated_by_year$year, coal_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab="PM"[2.5]* " Emissions (tons)",
main="PM"[2.5]* " Emissions from coal combustion sources in US")
dev.off()
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Using grep now to get the coal data
scc_coal_data <- scc_data[grep('coal', scc_data$Short.Name),]
# now we need the coal_emissions from the scc coal data we got before
coal_emissions <- emissions_data[emissions_data$SCC %in% scc_coal_data$SCC,]
# Now like previous times we aggregate (only by year now) but with the new subset we just created
coal_emissions_aggregated_by_year <-aggregate(Emissions ~ year, coal_emissions, sum)
# Now we plot that to a png file, I will use BASE again
png("plot4.png")
plot(coal_emissions_aggregated_by_year$year, coal_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab="PM"[2.5]* " Emissions (tons)",
main="PM"[2.5]* " Emissions from coal combustion sources in US")
dev.off()
png("plot4.png")
plot(coal_emissions_aggregated_by_year$year, coal_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab=expression("PM"[2.5]* " Emissions (tons)"),
main=expression("PM"[2.5]* " Emissions from coal combustion sources in US"))
dev.off()
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Ok now we need those from Baltimore and ON-ROAD type
baltimore_motor_emissions <- emissions_data(emissions_data$fips=="24510" & emissions_data$type=="ON-ROAD")
# And also aggreagate like the past ones
baltimore_motor_emissions_aggregated_by_year <-aggregate(Emissions ~ year, baltimore_motor_emissions, sum)
# Now we plot that to a png file, I will use BASE again
png("plot5.png")
plot(baltimore_motor_emissions_aggregated_by_year$year, baltimore_motor_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab=expression("PM"[2.5]* " Emissions (tons)"),
main=expression("PM"[2.5]* " Emissions from motor vehicles in Baltimore City"))
dev.off()
baltimore_motor_emissions <- emissions_data[emissions_data$fips=="24510" & emissions_data$type=="ON-ROAD"]
# And also aggreagate like the past ones
baltimore_motor_emissions_aggregated_by_year <-aggregate(Emissions ~ year, baltimore_motor_emissions, sum)
# Now we plot that to a png file, I will use BASE again
png("plot5.png")
plot(baltimore_motor_emissions_aggregated_by_year$year, baltimore_motor_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab=expression("PM"[2.5]* " Emissions (tons)"),
main=expression("PM"[2.5]* " Emissions from motor vehicles in Baltimore City"))
dev.off()
baltimore_motor_emissions <- emissions_data[emissions_data$fips=="24510" & emissions_data$type=="ON-ROAD",]
# And also aggreagate like the past ones
baltimore_motor_emissions_aggregated_by_year <-aggregate(Emissions ~ year, baltimore_motor_emissions, sum)
# Now we plot that to a png file, I will use BASE again
png("plot5.png")
plot(baltimore_motor_emissions_aggregated_by_year$year, baltimore_motor_emissions_aggregated_by_year$Emissions ,type="b", xlab="Year",
ylab=expression("PM"[2.5]* " Emissions (tons)"),
main=expression("PM"[2.5]* " Emissions from motor vehicles in Baltimore City"))
dev.off()
# First we load both files
emissions_data  <- readRDS("summarySCC_PM25.rds")
scc_data        <- readRDS("Source_Classification_Code.rds")
# Ok now we need those from Baltimore and ON-ROAD type and the same for Los Angeles
motor_emissions <- emissions_data[emissions_data$type=="ON-ROAD" & emissions_data$fips %in% c('24510','06037'),]
# And also aggreagate like the past ones
both_cities_aggregated_by_year <- aggregate(Emissions ~ year + fips , motor_emissions,sum)
both_cities_aggregated_by_year$fips[both_cities_aggregated_by_year$fips=="24510"] <- "Baltimore, MD"
both_cities_aggregated_by_year$fips[both_cities_aggregated_by_year$fips=="06037"] <- "Los Angeles, CA"
# Now we plot that to a png file, using ggplot2 to compare better
library(ggplot2)
png("plot6.png")
g <- ggplot(both_cities_aggregated_by_year, aes(factor(year),Emissions))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity") + xlab("year") + ylab("Total PM 2.5 Emissions") +
ggtitle("Total Emissions from motor vehicles in Baltimore City and Los Angeles County")
print(g)
dev.off()
png("plot6.png")
g <- ggplot(both_cities_aggregated_by_year, aes(factor(year),Emissions))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat="identity") + xlab("year") + ylab("Total PM 2.5 Emissions") +
ggtitle("Total Emissions from motor vehicles in Baltimore and Los Angeles")
print(g)
dev.off()
